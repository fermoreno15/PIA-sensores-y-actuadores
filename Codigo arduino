const int trigPin = 9;      
const int echoPin = 10;     
const int rele1 = 3;       
const int rele2 = 4;       
const int flowSensorPin = 2; 
const long maxDistance = 10; 
volatile double waterFlow = 0; 

void setup() {
  
  pinMode(rele1, OUTPUT);
  pinMode(rele2, OUTPUT);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(flowSensorPin, INPUT); 
  Serial.begin(9600);

  waterFlow = 0;
  attachInterrupt(digitalPinToInterrupt(flowSensorPin), pulse, RISING); 

  digitalWrite(rele1, HIGH);
  digitalWrite(rele2, HIGH);
}

void loop() {
  
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duration = pulseIn(echoPin, HIGH);
  long distance = duration * 0.034 / 2;

  Serial.print("Distancia: ");
  Serial.print(distance);
  Serial.println(" cm");

  long midPoint = maxDistance / 2;

  if (distance <= midPoint) {
    digitalWrite(rele1, LOW); // Activar primer relevador (LOW = encendido)
    Serial.println("Primer relevador activado.");

    delay(1000); 
    Serial.println("Iniciando mediciÃ³n del sensor de flujo.");
  
    while (true) {
      double adjustedFlow = waterFlow / 13.0;

      Serial.print("Flujo acumulado: ");
      Serial.print(adjustedFlow);
      Serial.println(" L");
 
      if (adjustedFlow >= 0.4) {
        digitalWrite(rele1, HIGH);  
        Serial.println("Primer relevador desactivado.");
        digitalWrite(rele2, LOW); 
        Serial.println("Segundo relevador activado.");

        delay(7000); 
        digitalWrite(rele2, HIGH); 
        Serial.println("Segundo relevador desactivado.");

        waterFlow = 0; 
        Serial.println("Flujo reiniciado.");
        break; 
      }
      delay(500); 
    }
  } else {
    digitalWrite(rele1, HIGH); 
  }
  delay(100); 
}
void pulse() {
  waterFlow += 1.0 / 450.0; 
}
